INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/rpgsbs/r01sa23/miniconda3/bin/python3 /home/rpgsbs/r01sa23/Documents/pyperplan/benchmarks/downward/builds/release/bin/translate/translate.py movie/domain.pddl movie/task06.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 16 rules.
Computing model... [0.000s CPU, 0.010s wall-clock]
211 relevant atoms
0 auxiliary atoms
211 final queue length
256 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
7 initial candidates
Finding invariants: [0.010s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
7 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.001s wall-clock]
1 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
0 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
7 of 7 variables necessary.
0 of 0 mutex groups necessary.
52 of 52 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 14
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 52
Translator axioms: 0
Translator task size: 133
Translator peak memory: 33396 KB
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.010s CPU, 0.022s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rpgsbs/r01sa23/Documents/pyperplan/benchmarks/downward/builds/release/bin/downward --search 'astar(ipdb())' --sas-file 'output/movie-domain-task06-astar(ipdb())-output.sas' --internal-plan-file sas_plan < output.sas
[t=0.000135s, 9984 KB] reading input...
[t=0.003627s, 10248 KB] done reading input!
[t=0.005097s, 10644 KB] Initializing canonical PDB heuristic...
[t=0.005151s, 10644 KB] Generating patterns using: hill climbing pattern collection generator
[t=0.005999s, 10644 KB] Done calculating initial pattern collection: 0.000864s
[t=0.006050s, 10644 KB] Average operator cost: 1.000000
[t=0.006078s, 10644 KB] building causal graph...done! [t=0.000193s]
[t=0.010630s, 10644 KB] Done calculating initial candidate PDBs
[t=0.016629s, 10644 KB] found a better pattern with improvement 75
[t=0.026740s, 10792 KB] found a better pattern with improvement 974
[t=0.061292s, 11384 KB] found a better pattern with improvement 978
[t=0.389067s, 18504 KB] found a better pattern with improvement 835
[t=1.101883s, 44560 KB] found a better pattern with improvement 230
[t=1.618765s, 59936 KB] found a better pattern with improvement 34
[t=2.131199s, 75376 KB] Improvement below threshold. Stop hill climbing.
[t=2.131274s, 75376 KB] Hill climbing iterations: 7
[t=2.131282s, 75376 KB] Hill climbing generated patterns: 44
[t=2.131291s, 75376 KB] Hill climbing rejected patterns: 12
[t=2.131297s, 75376 KB] Hill climbing maximum PDB size: 1975680
[t=2.131302s, 75376 KB] Hill climbing time: 2.125258s
[t=2.133328s, 75376 KB] hill climbing pattern collection generator number of patterns: 11
[t=2.133355s, 75376 KB] hill climbing pattern collection generator total PDB size: 1215886
[t=2.133362s, 75376 KB] hill climbing pattern collection generator computation time: 2.128152s
[t=2.133368s, 75376 KB] Running dominance pruning...
[t=2.133376s, 75376 KB] Pruned 4 of 7 pattern cliques
[t=2.133382s, 75376 KB] Pruned 5 of 11 PDBs
[t=2.133387s, 75376 KB] Dominance pruning took 0.000019s
[t=2.133395s, 75376 KB] Canonical PDB heuristic number of patterns: 6
[t=2.133402s, 75376 KB] Canonical PDB heuristic total PDB size: 1185450
[t=2.133407s, 75376 KB] Canonical PDB heuristic computation time: 2.128300s
[t=2.133431s, 75376 KB] Building successor generator...done!
[t=2.133633s, 75376 KB] peak memory difference for successor generator creation: 0 KB
[t=2.133639s, 75376 KB] time for successor generation creation: 0.000176s
[t=2.133649s, 75376 KB] Variables: 9
[t=2.133654s, 75376 KB] FactPairs: 104
[t=2.133660s, 75376 KB] Bytes per state: 8
unknown option --sas-file
Usage error occurred.
Peak memory: 75376 KB
Remove intermediate file output.sas
Traceback (most recent call last):
  File "/home/rpgsbs/r01sa23/Documents/pyperplan/benchmarks/./downward/fast-downward.py", line 5, in <module>
    main()
  File "/home/rpgsbs/r01sa23/Documents/pyperplan/benchmarks/downward/driver/main.py", line 43, in main
    args.sas_file.unlink()
  File "/home/rpgsbs/r01sa23/miniconda3/lib/python3.11/pathlib.py", line 1147, in unlink
    os.unlink(self)
FileNotFoundError: [Errno 2] No such file or directory: 'output.sas'
